# Adjust machine specific things
# only for bare-metals or compute engines
# not suitable for cloud provider flavors (GKE, EKS ..)
- name: bootstrap
  hosts: k8s
  become: yes
  become_user: ansible
  gather_facts: no

  vars:
    dummy: ali

  tasks:

    - name: Checks - Virtualization - Get vmx|svm info
      command: egrep -c '(vmx|svm)' /proc/cpuinfo
      register: isVirtualizationEnabled

    - name: Checks - Virtualization - CPU info is not 0
      assert:
        that:
          - "'{{isVirtualizationEnabled.stdout}}' != '0'"
        fail_msg: "VT-x/AMD-V is not enabled. "
        success_msg: "VT-x/AMD-V is enabled"

    - name: Checks - Virtualization - Get CPU architecture
      command: egrep -c ' lm ' /proc/cpuinfo
      register: isCPU64bit

    - name: Checks - Virtualization - CPU is 64bit
      assert:
        that:
          - "'{{isCPU64bit.stdout}}' != '0'"
        fail_msg: "CPU is not 64 bit."
        success_msg: "CPU is 64 bit."

    - name: Checks - Get current hostname
      command: hostname
      register: currentHostname

    - name: Checks - Is hostname equal to 'base'
      assert:
        that:
          - "'{{currentHostname.stdout}}' == 'base'"
        fail_msg: "Current hostname is not base. Be sure below replacements are fulfilled"
        success_msg: "Current hostname is base"
      ignore_errors: yes

    - name: Hostname - Update hostname as '{{inventory_hostname}}'
      hostname:
        name: "{{inventory_hostname}}"
        use: debian                            #todo: ubuntu specific value
      become: yes
      become_user: root

    - name: Hostname - Update /etc/hosts, too
      replace:
        path: /etc/hosts
        regexp: >-
          (\s+){{currentHostname.stdout}}(\s+.*)?$
        replace: >-
          \1{{inventory_hostname}}\2
      become: yes
      become_user: root



# may need community.general.nmcli
#    - name: Network - Apply static IP
#      debug:
#        msg: "{{user}} - "
